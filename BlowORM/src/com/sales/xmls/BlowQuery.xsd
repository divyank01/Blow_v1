<?xml version="1.0" encoding="UTF-8"?>
<!--
  *  BLOW-ORM is an open source ORM for java and its currently under development.
  *
  *  Copyright (C) 2016  @author Divyank Sharma
  *
  *  This program is free software: you can redistribute it and/or modify
  *  it under the terms of the GNU General Public License as published by
  *  the Free Software Foundation, either version 3 of the License, or
  *  (at your option) any later version.
  *
  *  This program is distributed in the hope that it will be useful,
  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
  *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *  
  *  
  *  In Addition to it if you find any bugs or encounter any issue you need to notify me.
  *  I appreciate any suggestions to improve it.
  *  @mailto: divyank01@gmail.com-->

<ns:schema targetNamespace="http://www.blocore.org/BlowQuery" elementFormDefault="qualified" xmlns:ns="http://www.w3.org/2001/XMLSchema" xmlns="http://www.blocore.org/BlowQuery">

	<ns:complexType name="Query" mixed="true">
		<ns:choice minOccurs="0" maxOccurs="unbounded">
			<ns:element name="Include" type="Include" minOccurs="0" maxOccurs="unbounded">
			</ns:element>
			<ns:element name="condition" type="Condition" maxOccurs="1" minOccurs="0"></ns:element>
		</ns:choice>
		<ns:attribute name="type" use="required">
			<ns:simpleType>
				<ns:restriction base="ns:string">
					<ns:enumeration value="insert"></ns:enumeration>
					<ns:enumeration value="update"></ns:enumeration>
					<ns:enumeration value="delete"></ns:enumeration>
					<ns:enumeration value="select"></ns:enumeration>
				</ns:restriction>
			</ns:simpleType>
		</ns:attribute>
		<ns:attribute name="name" type="ns:string" use="required"></ns:attribute>
		<ns:attribute name="class" type="ns:string" use="optional"></ns:attribute>
		<ns:attribute name="mapping-object" type="ns:string" use="required"></ns:attribute>
	</ns:complexType>

	<ns:complexType name="Include">
		<ns:attribute name="ref" type="ns:string" use="required"></ns:attribute>
	</ns:complexType>

	<ns:element name="Queries" type="Queries"></ns:element>

	<ns:complexType name="Queries">
		<ns:sequence maxOccurs="unbounded" minOccurs="0">
			<ns:element name="Include" type="SubQuery" minOccurs="0" maxOccurs="unbounded">
			</ns:element>
			<ns:element name="Query" type="Query" minOccurs="0" maxOccurs="unbounded">
			</ns:element>
			<ns:element name="Object" type="Object" minOccurs="0" maxOccurs="unbounded"></ns:element>
		</ns:sequence>
	</ns:complexType>

	<ns:complexType name="SubQuery" mixed="true">
		<ns:attribute name="name" type="ns:string" use="required"></ns:attribute>
	</ns:complexType>

	<ns:complexType name="Object" mixed="true">
		<ns:sequence>
			<ns:element name="property" type="Property" minOccurs="1" maxOccurs="unbounded">
			</ns:element>
		</ns:sequence>
		<ns:attribute name="className" type="ns:string" use="required"></ns:attribute>
		<ns:attribute name="name" type="ns:string" use="required"></ns:attribute>
	</ns:complexType>

	<ns:complexType name="Property" mixed="true">
		<ns:attribute name="attr" type="ns:string" use="required"></ns:attribute>
		<ns:attribute name="column" type="ns:string" use="optional"></ns:attribute>
		<ns:attribute name="mapping-object" type="ns:string"></ns:attribute>
	</ns:complexType>

	<ns:complexType name="NotNull" mixed="true">
		<ns:attribute name="prop" type="ns:string" use="required"></ns:attribute>
	</ns:complexType>

	<ns:complexType name="Condition" mixed="false">
		<ns:choice minOccurs="0" maxOccurs="unbounded">
			<ns:sequence>
				<ns:element name="when" type="When" maxOccurs="1" minOccurs="1">
				</ns:element>
				<ns:element name="otherwise" type="OtherWise" maxOccurs="1" minOccurs="1"></ns:element>
			</ns:sequence>
			<ns:sequence>
				<ns:element name="if" type="When" maxOccurs="unbounded" minOccurs="1">
				</ns:element>
			</ns:sequence>
			<ns:sequence>
				<ns:element name="NotNull" type="NotNull" maxOccurs="unbounded" minOccurs="0">
				</ns:element>
			</ns:sequence>
		</ns:choice>		
	</ns:complexType>

	<ns:complexType name="When" mixed="true">
		<ns:attribute name="prop" use="required">
			<ns:simpleType>
				<ns:restriction base="ns:string">
					<ns:pattern value="(\w+(.)?\w+)+"></ns:pattern>
				</ns:restriction>
			</ns:simpleType>
		</ns:attribute>
		<ns:attribute name="operator" use="required">
			<ns:simpleType>
				<ns:restriction base="ns:string">
					<ns:enumeration value="GT"></ns:enumeration>
					<ns:enumeration value="EQ"></ns:enumeration>
					<ns:enumeration value="LT"></ns:enumeration>
					<ns:enumeration value="GTEQ"></ns:enumeration>
					<ns:enumeration value="LTEQ"></ns:enumeration>
					<ns:enumeration value="NOTEQ"></ns:enumeration>
				</ns:restriction>
			</ns:simpleType>
		</ns:attribute>
		<ns:attribute name="value" use="required">
			<ns:simpleType>
				<ns:restriction base="ns:string">
					<ns:pattern value="\w+"></ns:pattern>
				</ns:restriction>
			</ns:simpleType>
		</ns:attribute>
	</ns:complexType>

	<ns:complexType name="OtherWise" mixed="true"></ns:complexType>
</ns:schema>