{
  "name": "Blow v1",
  "tagline": "It's a JAVA based ORM.",
  "body": "# Blow\r\n## A JAVA based ORM\r\nBlow is a java based orm, which is designed keeping in mind the simplicity of use for the end users.\r\n\r\n## Some Features:\r\n* Able to find out relations between classes.\r\n* Fetch data based on relationship and can be modified.\r\n* Able to generate queries for basic insert update delete and select operations.\r\n* Supports annotation based as well as XML based mappings.\r\n* No dependency on any other external library.\r\n* Able to sync in database structure.\r\n* Able to generate POJOs based on XML mappings.\r\n* Pooling heavy objects for faster run times.\r\n* Able to run queries saved in XMLs with logical operations.\r\n* Partial query pooling.\r\n\r\n## Usages\r\n### Getting Started\r\nGet context from core\r\n\r\n\t\t`BlowContext context=BlowCore.getInstance().getContext();`\r\n\r\nFor fetching data from data base you will need basis as in on what basis you wants to fetch data\r\n               \r\n                `Product prod=context.BlowUtils.getBasis(Product.class).propEquals(\"id\",26).retrieveOne();`\r\n\r\nAlthough above line is self explanatory we need basis on a class and then put property values to\r\nget one or many records.\r\n\r\nFor deleting a record, it can be done in one of two ways as in you have the object which you want\r\nto delete or you can set on what basis the record should be deleted.\r\n                 \r\n                `context.delete(prod);`\r\n \r\n\r\n\r\n### Note\r\nCurrently tested for Oracle and will expand for other databases soon.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}